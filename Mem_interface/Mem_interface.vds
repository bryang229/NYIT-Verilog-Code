$date
	Fri Apr 19 19:09:25 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module Mem_interface_tb $end
$var wire 8 ! b_out [7:0] $end
$var wire 4 " b_addr [3:0] $end
$var wire 8 # a_out [7:0] $end
$var wire 4 $ a_addr [3:0] $end
$var reg 8 % a [7:0] $end
$var reg 4 & addr_a [3:0] $end
$var reg 4 ' addr_b [3:0] $end
$var reg 8 ( b [7:0] $end
$var reg 1 ) clk $end
$var reg 4 * i [3:0] $end
$var reg 1 + reset $end
$var reg 1 , rw $end
$var reg 1 - wipe $end
$var integer 32 . idx [31:0] $end
$var integer 32 / idy [31:0] $end
$scope module mem $end
$var wire 8 0 a [7:0] $end
$var wire 4 1 addr_a [3:0] $end
$var wire 4 2 addr_b [3:0] $end
$var wire 8 3 b [7:0] $end
$var wire 1 ) clk $end
$var wire 1 + reset $end
$var wire 1 , rw $end
$var wire 1 - wipe $end
$var reg 4 4 a_addr [3:0] $end
$var reg 8 5 a_out [7:0] $end
$var reg 4 6 b_addr [3:0] $end
$var reg 8 7 b_out [7:0] $end
$var integer 32 8 i [31:0] $end
$upscope $end
$upscope $end
$scope module Mem_interface_tb $end
$scope module mem $end
$var reg 8 9 \a_reg[0] [7:0] $end
$upscope $end
$upscope $end
$scope module Mem_interface_tb $end
$scope module mem $end
$var reg 8 : \a_reg[1] [7:0] $end
$upscope $end
$upscope $end
$scope module Mem_interface_tb $end
$scope module mem $end
$var reg 8 ; \a_reg[2] [7:0] $end
$upscope $end
$upscope $end
$scope module Mem_interface_tb $end
$scope module mem $end
$var reg 8 < \a_reg[3] [7:0] $end
$upscope $end
$upscope $end
$scope module Mem_interface_tb $end
$scope module mem $end
$var reg 8 = \a_reg[4] [7:0] $end
$upscope $end
$upscope $end
$scope module Mem_interface_tb $end
$scope module mem $end
$var reg 8 > \a_reg[5] [7:0] $end
$upscope $end
$upscope $end
$scope module Mem_interface_tb $end
$scope module mem $end
$var reg 8 ? \a_reg[6] [7:0] $end
$upscope $end
$upscope $end
$scope module Mem_interface_tb $end
$scope module mem $end
$var reg 8 @ \a_reg[7] [7:0] $end
$upscope $end
$upscope $end
$scope module Mem_interface_tb $end
$scope module mem $end
$var reg 8 A \a_reg[8] [7:0] $end
$upscope $end
$upscope $end
$scope module Mem_interface_tb $end
$scope module mem $end
$var reg 8 B \a_reg[9] [7:0] $end
$upscope $end
$upscope $end
$scope module Mem_interface_tb $end
$scope module mem $end
$var reg 8 C \a_reg[10] [7:0] $end
$upscope $end
$upscope $end
$scope module Mem_interface_tb $end
$scope module mem $end
$var reg 8 D \a_reg[11] [7:0] $end
$upscope $end
$upscope $end
$scope module Mem_interface_tb $end
$scope module mem $end
$var reg 8 E \a_reg[12] [7:0] $end
$upscope $end
$upscope $end
$scope module Mem_interface_tb $end
$scope module mem $end
$var reg 8 F \a_reg[13] [7:0] $end
$upscope $end
$upscope $end
$scope module Mem_interface_tb $end
$scope module mem $end
$var reg 8 G \a_reg[14] [7:0] $end
$upscope $end
$upscope $end
$scope module Mem_interface_tb $end
$scope module mem $end
$var reg 8 H \a_reg[15] [7:0] $end
$upscope $end
$upscope $end
$scope module Mem_interface_tb $end
$scope module mem $end
$var reg 8 I \b_reg[0] [7:0] $end
$upscope $end
$upscope $end
$scope module Mem_interface_tb $end
$scope module mem $end
$var reg 8 J \b_reg[1] [7:0] $end
$upscope $end
$upscope $end
$scope module Mem_interface_tb $end
$scope module mem $end
$var reg 8 K \b_reg[2] [7:0] $end
$upscope $end
$upscope $end
$scope module Mem_interface_tb $end
$scope module mem $end
$var reg 8 L \b_reg[3] [7:0] $end
$upscope $end
$upscope $end
$scope module Mem_interface_tb $end
$scope module mem $end
$var reg 8 M \b_reg[4] [7:0] $end
$upscope $end
$upscope $end
$scope module Mem_interface_tb $end
$scope module mem $end
$var reg 8 N \b_reg[5] [7:0] $end
$upscope $end
$upscope $end
$scope module Mem_interface_tb $end
$scope module mem $end
$var reg 8 O \b_reg[6] [7:0] $end
$upscope $end
$upscope $end
$scope module Mem_interface_tb $end
$scope module mem $end
$var reg 8 P \b_reg[7] [7:0] $end
$upscope $end
$upscope $end
$scope module Mem_interface_tb $end
$scope module mem $end
$var reg 8 Q \b_reg[8] [7:0] $end
$upscope $end
$upscope $end
$scope module Mem_interface_tb $end
$scope module mem $end
$var reg 8 R \b_reg[9] [7:0] $end
$upscope $end
$upscope $end
$scope module Mem_interface_tb $end
$scope module mem $end
$var reg 8 S \b_reg[10] [7:0] $end
$upscope $end
$upscope $end
$scope module Mem_interface_tb $end
$scope module mem $end
$var reg 8 T \b_reg[11] [7:0] $end
$upscope $end
$upscope $end
$scope module Mem_interface_tb $end
$scope module mem $end
$var reg 8 U \b_reg[12] [7:0] $end
$upscope $end
$upscope $end
$scope module Mem_interface_tb $end
$scope module mem $end
$var reg 8 V \b_reg[13] [7:0] $end
$upscope $end
$upscope $end
$scope module Mem_interface_tb $end
$scope module mem $end
$var reg 8 W \b_reg[14] [7:0] $end
$upscope $end
$upscope $end
$scope module Mem_interface_tb $end
$scope module mem $end
$var reg 8 X \b_reg[15] [7:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx X
bx W
bx V
bx U
bx T
bx S
bx R
bx Q
bx P
bx O
bx N
bx M
bx L
bx K
bx J
bx I
bx H
bx G
bx F
bx E
bx D
bx C
bx B
bx A
bx @
bx ?
bx >
bx =
bx <
bx ;
bx :
bx 9
bx 8
bx 7
bx 6
bx 5
bx 4
b10100011 3
bx 2
bx 1
b1010100 0
b10000 /
b10000 .
0-
1,
1+
b0 *
0)
b10100011 (
bx '
bx &
b1010100 %
bx $
bx #
bx "
bx !
$end
#5000
1)
#10000
b0 X
b0 H
b0 W
b0 G
b0 V
b0 F
b0 U
b0 E
b0 T
b0 D
b0 S
b0 C
b0 R
b0 B
b0 Q
b0 A
b0 P
b0 @
b0 O
b0 ?
b0 N
b0 >
b0 M
b0 =
b0 L
b0 <
b0 K
b0 ;
b0 J
b0 :
b0 I
b0 9
b0 "
b0 6
b0 $
b0 4
b0 !
b0 7
b0 #
b0 5
b10000 8
0+
0)
#15000
b0 X
b0 H
b0 W
b0 G
b0 V
b0 F
b0 U
b0 E
b0 T
b0 D
b0 S
b0 C
b0 R
b0 B
b0 Q
b0 A
b0 P
b0 @
b0 O
b0 ?
b0 N
b0 >
b0 M
b0 =
b0 L
b0 <
b0 K
b0 ;
b0 J
b0 :
b0 I
b0 9
b10000 8
1)
#20000
0)
#25000
b0 X
b0 H
b0 W
b0 G
b0 V
b0 F
b0 U
b0 E
b0 T
b0 D
b0 S
b0 C
b0 R
b0 B
b0 Q
b0 A
b0 P
b0 @
b0 O
b0 ?
b0 N
b0 >
b0 M
b0 =
b0 L
b0 <
b0 K
b0 ;
b0 J
b0 :
b0 I
b0 9
b10000 8
1)
#30000
1+
0)
#35000
bx "
bx 6
bx $
bx 4
1)
#40000
0)
#45000
1)
#50000
b0 '
b0 2
b0 &
b0 1
b1 *
b110010 (
b110010 3
b10110 %
b10110 0
0)
#55000
b110010 I
b10110 9
b0 "
b0 6
b0 $
b0 4
1)
#60000
b1 '
b1 2
b1 &
b1 1
b10 *
b11110010 (
b11110010 3
b10000011 %
b10000011 0
0)
#65000
b11110010 J
b10000011 :
b1 "
b1 6
b1 $
b1 4
1)
#70000
b10 '
b10 2
b10 &
b10 1
b11 *
b110101 (
b110101 3
b1110 %
b1110 0
0)
#75000
b110101 K
b1110 ;
b10 "
b10 6
b10 $
b10 4
1)
#80000
b11 '
b11 2
b11 &
b11 1
b100 *
b11100010 (
b11100010 3
b11111001 %
b11111001 0
0)
#85000
b11100010 L
b11111001 <
b11 "
b11 6
b11 $
b11 4
1)
#90000
b100 '
b100 2
b100 &
b100 1
b101 *
b1111100 (
b1111100 3
b11111100 %
b11111100 0
0)
#95000
b1111100 M
b11111100 =
b100 "
b100 6
b100 $
b100 4
1)
#100000
b101 '
b101 2
b101 &
b101 1
b110 *
b10 (
b10 3
b1011101 %
b1011101 0
0)
#105000
b10 N
b1011101 >
b101 "
b101 6
b101 $
b101 4
1)
#110000
b110 '
b110 2
b110 &
b110 1
b111 *
b1011000 (
b1011000 3
b11111110 %
b11111110 0
0)
#115000
b1011000 O
b11111110 ?
b110 "
b110 6
b110 $
b110 4
1)
#120000
b111 '
b111 2
b111 &
b111 1
b1000 *
b1110101 (
b1110101 3
b1110011 %
b1110011 0
0)
#125000
b1110101 P
b1110011 @
b111 "
b111 6
b111 $
b111 4
1)
#130000
b1000 '
b1000 2
b1000 &
b1000 1
b1001 *
b111100 (
b111100 3
b11011111 %
b11011111 0
0)
#135000
b111100 Q
b11011111 A
b1000 "
b1000 6
b1000 $
b1000 4
1)
#140000
b1001 '
b1001 2
b1001 &
b1001 1
b1010 *
b1100011 (
b1100011 3
b100110 %
b100110 0
0)
#145000
b1100011 R
b100110 B
b1001 "
b1001 6
b1001 $
b1001 4
1)
#150000
b1010 '
b1010 2
b1010 &
b1010 1
b1011 *
b11011011 (
b11011011 3
b10101010 %
b10101010 0
0)
#155000
b11011011 S
b10101010 C
b1010 "
b1010 6
b1010 $
b1010 4
1)
#160000
b1011 '
b1011 2
b1011 &
b1011 1
b1100 *
b11011000 (
b11011000 3
b11010111 %
b11010111 0
0)
#165000
b11011000 T
b11010111 D
b1011 "
b1011 6
b1011 $
b1011 4
1)
#170000
b1100 '
b1100 2
b1100 &
b1100 1
b1101 *
b11000111 (
b11000111 3
b11001110 %
b11001110 0
0)
#175000
b11000111 U
b11001110 E
b1100 "
b1100 6
b1100 $
b1100 4
1)
#180000
b1101 '
b1101 2
b1101 &
b1101 1
b1110 *
b110101 (
b110101 3
b1011101 %
b1011101 0
0)
#185000
b110101 V
b1011101 F
b1101 "
b1101 6
b1101 $
b1101 4
1)
#190000
b1110 '
b1110 2
b1110 &
b1110 1
b1111 *
b10010100 (
b10010100 3
b11111000 %
b11111000 0
0)
#195000
b10010100 W
b11111000 G
b1110 "
b1110 6
b1110 $
b1110 4
1)
#200000
b1111 '
b1111 2
b1111 &
b1111 1
b0 *
b10011000 (
b10011000 3
b1001110 %
b1001110 0
0)
#205000
b10011000 X
b1001110 H
b1111 "
b1111 6
b1111 $
b1111 4
1)
#210000
b101 '
b101 2
b11 &
b11 1
0,
0)
#215000
b101 "
b101 6
b11 $
b11 4
b10 !
b10 7
b11111001 #
b11111001 5
1)
#220000
b10 '
b10 2
b1000 &
b1000 1
0)
#225000
b10 "
b10 6
b1000 $
b1000 4
b110101 !
b110101 7
b11011111 #
b11011111 5
1)
#230000
b1100 '
b1100 2
b1010 &
b1010 1
0)
#235000
b1100 "
b1100 6
b1010 $
b1010 4
b11000111 !
b11000111 7
b10101010 #
b10101010 5
1)
#240000
b1 '
b1 2
b0 &
b0 1
0)
#245000
b1 "
b1 6
b0 $
b0 4
b11110010 !
b11110010 7
b10110 #
b10110 5
1)
#250000
b0 '
b0 2
b1 &
b1 1
0)
#255000
b0 "
b0 6
b1 $
b1 4
b110010 !
b110010 7
b10000011 #
b10000011 5
1)
#260000
b1110 '
b1110 2
b1111 &
b1111 1
0)
#265000
b1110 "
b1110 6
b1111 $
b1111 4
b10010100 !
b10010100 7
b1001110 #
b1001110 5
1)
#270000
b1111 '
b1111 2
b1110 &
b1110 1
0)
#275000
b1111 "
b1111 6
b1110 $
b1110 4
b10011000 !
b10011000 7
b11111000 #
b11111000 5
1)
#280000
b1101 '
b1101 2
b1011 &
b1011 1
0)
